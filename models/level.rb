# Class containing a level and every methods about it
#
# Positions in grid start in the upper-left corner with (m=0,n=0).
#
# Example : (2,4) means third rows and fifth cols starting in the upper-left
# corner.
#
# Grid is made like this in loaded files :
#
#      #####                 # -> wall
#      #   #                 $ -> box
#      #$  #                 . -> goal
#    ###  $##                * -> box on a goal (not in this figure)
#    #  $ $ #                @ -> pusher
#  ### # ## #   ######       + -> pusher on a goal
#  #   # ## #####  ..#       s -> inside floor (generated by recursive
#  # $  $          ..#            algorithm in program memory)
#  ##### ### #@##  ..#
#      #     #########
#      #######

class Level

  attr_reader :name, :copyright, :rows, :cols, :grid, :boxes,
              :goals, :pusher_pos_m, :pusher_pos_n

  def initialize(xml_level)
    xml_level_node = Nokogiri::XML(xml_level)

    @name      = xml_level_node.css('Level').attr('Id').text.strip
    @copyright = xml_level_node.css('Level').attr('Copyright').text.strip
    @rows      = xml_level_node.css('Level').attr('Height').text.strip.to_i
    @cols      = xml_level_node.css('Level').attr('Width').text.strip.to_i


    @grid         = [] # Grid of the level
    @boxes = 0  # Number of boxes in this level
    @goals = 0  # Number of goals in this level
    @pusher_pos_m = 0  # M position of the pusher
    @pusher_pos_n = 0  # N position of the pusher
  end

end
